{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome This is the docummentation for bloging platform Requirements Admin Requirements Name Description CRUD blog able to create , read , update and delete the blog post Add Tag before the blog post published the system must be asked for the tag e.g ai, finance and etc Preview Mode Before the blog post published or during edit should be available preview mode Login Before make blogpost admin must be logged in using onetime password that sended to email and token that sended has an exipration time Add Admin Admin can add another admins Edit or delete Admin can edit or delete blog post from the list of blog post in home page or another page as seen as user Go to Site Admin can directly go to online site from the dashboard User Requirements Name Description Home Home page that contain recommendation blog posts Search User can search any blog post that they want Save Post User can save blog post and the data is stored in local storage Share Button User can share any blog post to other social media platform System Requirements Name Description Next.Js The frontend must be using next.js framework Go - Languange For the backend must be using Go - Languange JWT Token when admin logged in they can edit or update blog post and when they send request to do that they should be send the jwt token in header requests Admin Info When admin loggin the info must be store in cookie with JWT token for 30 days Endless Scoll When user reach out the bottom of the content then system must be load another content About Page Show information about who i am and the contact","title":"Welcome"},{"location":"#welcome","text":"This is the docummentation for bloging platform","title":"Welcome"},{"location":"#requirements","text":"Admin Requirements Name Description CRUD blog able to create , read , update and delete the blog post Add Tag before the blog post published the system must be asked for the tag e.g ai, finance and etc Preview Mode Before the blog post published or during edit should be available preview mode Login Before make blogpost admin must be logged in using onetime password that sended to email and token that sended has an exipration time Add Admin Admin can add another admins Edit or delete Admin can edit or delete blog post from the list of blog post in home page or another page as seen as user Go to Site Admin can directly go to online site from the dashboard User Requirements Name Description Home Home page that contain recommendation blog posts Search User can search any blog post that they want Save Post User can save blog post and the data is stored in local storage Share Button User can share any blog post to other social media platform System Requirements Name Description Next.Js The frontend must be using next.js framework Go - Languange For the backend must be using Go - Languange JWT Token when admin logged in they can edit or update blog post and when they send request to do that they should be send the jwt token in header requests Admin Info When admin loggin the info must be store in cookie with JWT token for 30 days Endless Scoll When user reach out the bottom of the content then system must be load another content About Page Show information about who i am and the contact","title":"Requirements"},{"location":"1-dfd/","text":"Data Flow Diagram In this section we will be focused on how the data flow DFD for blog post DFD Level 0 Explaination : Admin can add or read blog post Guest just can read the blog post DFD Level 1 Explainations: Admin add blog post and save it to table blog Admin add tag to the blog post and save the tag to tags table Guest can read blog post from table blog and tags table DFD for admin Admin can add another admin and then save it to admin table","title":"Data Flow Diagram"},{"location":"1-dfd/#data-flow-diagram","text":"In this section we will be focused on how the data flow","title":"Data Flow Diagram"},{"location":"1-dfd/#dfd-for-blog-post","text":"","title":"DFD for blog post"},{"location":"1-dfd/#dfd-level-0","text":"Explaination : Admin can add or read blog post Guest just can read the blog post","title":"DFD Level 0"},{"location":"1-dfd/#dfd-level-1","text":"Explainations: Admin add blog post and save it to table blog Admin add tag to the blog post and save the tag to tags table Guest can read blog post from table blog and tags table","title":"DFD Level 1"},{"location":"1-dfd/#dfd-for-admin","text":"Admin can add another admin and then save it to admin table","title":"DFD for admin"},{"location":"2-erd/","text":"Entity Relationship Diagram In this section we will desribe about the tables end its entities General ERD Table explainations Users Users table used for storing user personal data Name Type Auto Increment Length Default Description id INT Yes 11 0 User's id it's auto increment name varchar No 50 NULL User's name e.g Jhon email varchar No 50 NULL User's email e.g jhon@gmail.com created_at datetime No NULL DATETIME.NOW() Creation date Login Login used for storing login information, login process will be using OTP sended to email Name Type Auto Increment Length Default Description id int Yes 11 0 login id code int No 6 0 OTP code that sended to user's email user_id int No 11 0 user's id exp datetime No NULL DATETIME.NOW() expiration OTP code it must be 15 minutes Blogs Blogs table used for storing blog data Name Type Auto Increment Length Default Description id int Yes 11 0 blog id title varchar No 100 NULL blog's title slug varchar No 150 NULL replace the space and punctuation from title by dash (-) preview_text varchar No 150 NULL first blog paragraph for shown as preview blog post body json No NULL NULL body of the blog post from editor.js data tags varchar No NULL NULL blog's tag separated with comma if more than 1 tags e.g machine-learning, ai, finance user int No 11 0 user's id created_at datetime No NULL DATETIME.NOW() Creation date Tags Tags table used for storing tags data Name Type Auto Increment Length Default Description id int Yes 11 0 tags id name varchar No 50 NULL tags name e.g machine learning slug varchar No 50 NULL space or punctuation from name replaced by using - (dash) e.g machine-learning","title":"Entity Relationship Diagram"},{"location":"2-erd/#entity-relationship-diagram","text":"In this section we will desribe about the tables end its entities","title":"Entity Relationship Diagram"},{"location":"2-erd/#general-erd","text":"","title":"General ERD"},{"location":"2-erd/#table-explainations","text":"Users Users table used for storing user personal data Name Type Auto Increment Length Default Description id INT Yes 11 0 User's id it's auto increment name varchar No 50 NULL User's name e.g Jhon email varchar No 50 NULL User's email e.g jhon@gmail.com created_at datetime No NULL DATETIME.NOW() Creation date Login Login used for storing login information, login process will be using OTP sended to email Name Type Auto Increment Length Default Description id int Yes 11 0 login id code int No 6 0 OTP code that sended to user's email user_id int No 11 0 user's id exp datetime No NULL DATETIME.NOW() expiration OTP code it must be 15 minutes Blogs Blogs table used for storing blog data Name Type Auto Increment Length Default Description id int Yes 11 0 blog id title varchar No 100 NULL blog's title slug varchar No 150 NULL replace the space and punctuation from title by dash (-) preview_text varchar No 150 NULL first blog paragraph for shown as preview blog post body json No NULL NULL body of the blog post from editor.js data tags varchar No NULL NULL blog's tag separated with comma if more than 1 tags e.g machine-learning, ai, finance user int No 11 0 user's id created_at datetime No NULL DATETIME.NOW() Creation date Tags Tags table used for storing tags data Name Type Auto Increment Length Default Description id int Yes 11 0 tags id name varchar No 50 NULL tags name e.g machine learning slug varchar No 50 NULL space or punctuation from name replaced by using - (dash) e.g machine-learning","title":"Table explainations"},{"location":"3-flowchart/","text":"Flowcharts Authentication In this section contain flowchart just for the most important aspect because others can be adjustable as needed and it's easy i am swear Admin Login Authentication Process Token Verification Once code sent then, user will enter the OTP code and then this is the process to validate the token","title":"Flowcharts Authentication"},{"location":"3-flowchart/#flowcharts-authentication","text":"In this section contain flowchart just for the most important aspect because others can be adjustable as needed and it's easy i am swear","title":"Flowcharts Authentication"},{"location":"3-flowchart/#admin-login","text":"","title":"Admin Login"},{"location":"3-flowchart/#authentication-process","text":"","title":"Authentication Process"},{"location":"3-flowchart/#token-verification","text":"Once code sent then, user will enter the OTP code and then this is the process to validate the token","title":"Token Verification"},{"location":"4-blog-flowchart/","text":"Blog Post Flowchart In this section we will describe all about the blog Blog Creation Below shown the process of how to make a blog","title":"Blog Post Flowchart"},{"location":"4-blog-flowchart/#blog-post-flowchart","text":"In this section we will describe all about the blog","title":"Blog Post Flowchart"},{"location":"4-blog-flowchart/#blog-creation","text":"Below shown the process of how to make a blog","title":"Blog Creation"}]}